{"version":3,"sources":["firebase.js","screens/LoginScreen.js","screens/RegisterScreen.js","components/CustomListItem.js","screens/HomeScreen.js","screens/AddChatScreen.js","screens/ChatScreen.js","screens/JoinChatScreen.js","App.js","assets/logo.png","assets/avatar.png"],"names":["db","firebase","apps","length","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","firestore","auth","styles","StyleSheet","create","container","flex","justifyContent","alignItems","backgroundColor","padding","inputContainer","width","button","marginTop","LoginScreen","navigation","route","console","log","useState","email","setEmail","password","setPassword","useEffect","onAuthStateChanged","authUser","replace","signIn","signInWithEmailAndPassword","catch","error","alert","KeyboardAvoidingView","behavior","style","StatusBar","source","require","height","marginBottom","View","type","value","onChangeText","val","placeholder","autoFocus","secureTextEntry","onSubmitEditing","onPress","title","navigate","RegisterScreen","name","setName","imageURL","setImageUrl","useLayoutEffect","setOptions","headerBackTitle","h3","createUserWithEmailAndPassword","then","user","updateProfile","displayName","photoURL","a","async","collection","add","userName","userEmail","uid","userImageURL","createUser","message","listItem","CustomListItem","id","chatName","chatUsers","enterChat","chatMessages","setChatMessages","doc","orderBy","onSnapshot","snapshot","docs","map","data","key","bottomDivider","rounded","uri","Content","Title","fontWeight","Subtitle","numberOfLines","ellipsizeMode","Text","opacity","marginRight","headerLeft","Platform","select","ios","android","default","marginLeft","headerRight","flexDirection","HomeScreen","chats","setChats","signOutUser","signOut","where","currentUser","headerStyle","headerTitleStyle","color","headerTintColor","TouchableOpacity","activeOpacity","fontSize","AntDesign","size","SafeAreaView","ScrollView","AddChatScreen","input","setInput","createChat","chatOwner","goBack","leftIcon","disabled","safeArea","footer","textInput","bottom","borderColor","borderWidth","borderRadius","reciever","alignSelf","maxWidth","position","sender","margin","senderName","left","paddingRight","recieverName","right","paddingLeft","recieverText","senderText","ChatScreen","messages","setMessages","params","goToJoinPage","headerTitleAlign","headerBackTitleVisible","headerTitle","FontAwesome","Ionicons","sendMessage","Keyboard","dismiss","timestamp","FieldValue","serverTimestamp","OS","keyboardVerticalOffset","TouchableWithoutFeedback","contentContainerStyle","paddingTop","containerStyle","Date","toLocaleTimeString","hour","minute","TextInput","JoinChatScreen","setChatUsers","index","includes","userId","inviteUrl","update","arrayUnion","inviteUser","Stack","createNativeStackNavigator","globalScreenOptions","linking","config","screens","JoinChat","App","NavigationContainer","Navigator","screenOptions","Screen","component","module","exports"],"mappings":"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","file":"static/js/app.742939ed.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAGCk0o2G4sqKjutWcHPf5GO-2qsKKjhWw\",\n  authDomain: \"signal-clone-71a42.firebaseapp.com\",\n  projectId: \"signal-clone-71a42\",\n  storageBucket: \"signal-clone-71a42.appspot.com\",\n  messagingSenderId: \"927347466627\",\n  appId: \"1:927347466627:web:0e196bfff62132192b16b6\",\n};\n\nlet app;\n\nif (firebase.apps.length === 0) {\n  app = firebase.initializeApp(firebaseConfig);\n} else {\n  app = firebase.app();\n}\n\nconst db = app.firestore();\nconst auth = firebase.auth();\n\nexport { db, auth };\n","import React, { Component, useEffect, useState } from \"react\";\nimport { View, Text, StyleSheet, KeyboardAvoidingView } from \"react-native\";\nimport { Button, Input, Image } from \"react-native-elements\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { auth } from \"../firebase\";\n\n// create a component\nconst LoginScreen = ({ navigation, route }) => {\n  console.log(\"login screen route:\", route);\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((authUser) => {\n      if (authUser) {\n        navigation.replace(\"Home\");\n      }\n    });\n    return unsubscribe;\n  }, []);\n\n  const signIn = () => {\n    auth\n      .signInWithEmailAndPassword(email, password)\n      .catch((error) => alert(error));\n  };\n\n  return (\n    <KeyboardAvoidingView behavior=\"padding\" style={styles.container}>\n      <StatusBar style=\"light\" />\n      <Image\n        source={require(\"../assets/logo.png\")}\n        style={{ width: 200, height: 200, marginBottom: 30 }}\n      />\n      <View style={styles.inputContainer}>\n        <Input\n          type=\"email\"\n          value={email}\n          onChangeText={(val) => setEmail(val)}\n          placeholder=\"Email\"\n          autoFocus\n        />\n        <Input\n          type=\"password\"\n          value={password}\n          onChangeText={(val) => setPassword(val)}\n          placeholder=\"Password\"\n          secureTextEntry\n          onSubmitEditing={signIn}\n        />\n      </View>\n      <View style={styles.button}>\n        <Button onPress={signIn} title=\"Login\" />\n      </View>\n      <View style={styles.button}>\n        <Button\n          style={styles.button}\n          onPress={() => navigation.navigate(\"Register\")}\n          title=\"Register\"\n          type=\"outline\"\n        />\n      </View>\n      <View style={{ height: 100 }} />\n    </KeyboardAvoidingView>\n  );\n};\n\n// define your styles\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#fff\",\n    padding: 10,\n  },\n  inputContainer: {\n    width: 300,\n  },\n  button: {\n    width: 200,\n    marginTop: 10\n  },\n});\n\n//make this component available to the app\nexport default LoginScreen;\n","import React, { Component, useLayoutEffect, useState } from \"react\";\nimport { View, StyleSheet, KeyboardAvoidingView } from \"react-native\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { Button, Input, Text } from \"react-native-elements\";\nimport { auth, db } from \"../firebase\";\n\n// create a component\nconst RegisterScreen = ({ navigation }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [imageURL, setImageUrl] = useState(\"\");\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      headerBackTitle: \"Back to Login\",\n    });\n  }, [navigation]);\n\n  const createUser = async (authUser) => {\n    await db\n      .collection(\"users\")\n      .add({\n        userName: name,\n        userEmail: authUser.email,\n        uid: authUser.uid,\n        userImageURL:\n          imageURL ||\n          \"https://alpha-tv.net/wp-content/uploads/2021/12/avatar.png\",\n      })\n      .then(() => console.log(\"created new db user\"))\n      .catch((error) => alert(error));\n  };\n\n  const register = () => {\n    console.log(\"name\", name);\n    console.log(\"imageURL\", imageURL);\n\n    auth\n      .createUserWithEmailAndPassword(email, password)\n      .then((authUser) => {\n        console.log(\"authUser:\", authUser);\n        authUser.user.updateProfile({\n          displayName: name,\n          photoURL:\n            imageURL ||\n            \"https://alpha-tv.net/wp-content/uploads/2021/12/avatar.png\",\n        });\n\n        // create user\n        createUser(authUser.user);\n      })\n      .catch((error) => alert(error.message));\n  };\n\n  return (\n    <KeyboardAvoidingView behavior=\"padding\" style={styles.container}>\n      <StatusBar style=\"light\" />\n      <Text h3 style={styles.title}>\n        Create Account\n      </Text>\n      <View style={styles.inputContainer}>\n        <Input\n          type=\"text\"\n          value={name}\n          autoFocus\n          placeholder=\"Full Name\"\n          onChangeText={(val) => setName(val)}\n        />\n        <Input\n          type=\"text\"\n          value={email}\n          placeholder=\"Email\"\n          onChangeText={(val) => setEmail(val)}\n        />\n        <Input\n          type=\"text\"\n          value={password}\n          placeholder=\"Password\"\n          secureTextEntry\n          onChangeText={(val) => setPassword(val)}\n        />\n        <Input\n          type=\"text\"\n          value={imageURL}\n          placeholder=\"Profile Image Url (Optional)\"\n          onChangeText={(val) => setImageUrl(val)}\n        />\n      </View>\n      <View style={styles.button}>\n      <Button title=\"Register\" onPress={register} />\n      </View>\n      <View style={{ height: 100 }} />\n    </KeyboardAvoidingView>\n  );\n};\n\n// define your styles\nconst styles = StyleSheet.create({\n  title: {\n    marginBottom: 20,\n  },\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"white\",\n  },\n  inputContainer: {\n    width: 300,\n  },\n  button: {\n    width: 200,\n    marginTop: 10\n  },\n});\n\n//make this component available to the app\nexport default RegisterScreen;\n","import React, { Component, useEffect, useState } from \"react\";\nimport { View, Text, StyleSheet } from \"react-native\";\nimport { Avatar, ListItem } from \"react-native-elements\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport { db } from \"../firebase\";\n\n// create a component\nconst CustomListItem = ({ id, chatName, chatUsers, enterChat }) => {\n  const [chatMessages, setChatMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(false);\n\n  //const alertNewMessage = () => {\n   // alert('new message!');\n  //}\n\n  useEffect(() => {\n    const unsubscribe = db\n      .collection(\"chats\")\n      .doc(id)\n      .collection(\"messages\")\n      .orderBy(\"timestamp\", \"desc\")\n      .onSnapshot((snapshot) =>\n        setChatMessages(snapshot.docs.map((doc) => doc.data())),\n        //alertNewMessage()\n      );\n\n    return unsubscribe;\n    //unsubscribe();\n  }, []);\n\n  return (\n    <ListItem\n      style={styles.listItem}\n      key={id}\n      onPress={() => enterChat(id, chatName, chatUsers)}\n      key={id}\n      bottomDivider\n    >\n      <Avatar\n        rounded\n        source={\n          chatMessages?.[0]?.photoURL\n            ? { uri: chatMessages?.[0]?.photoURL }\n            : require(\"../assets/avatar.png\")\n        }\n      ></Avatar>\n      <ListItem.Content>\n        <ListItem.Title style={{ fontWeight: \"800\" }}>\n          {chatName}\n        </ListItem.Title>\n        <ListItem.Subtitle numberOfLines={1} ellipsizeMode=\"tail\">\n          <Text style={{ opacity: 0.5, marginRight: 5 }}>\n            {chatMessages?.[0]?.displayName}{\" \"}\n          </Text>\n          {chatMessages?.[0]?.message}\n        </ListItem.Subtitle>\n      </ListItem.Content>\n    </ListItem>\n  );\n};\n\n// define your styles\nconst styles = StyleSheet.create({\n  container: {},\n  listItem: {},\n});\n\n//make this component available to the app\nexport default CustomListItem;\n","import React, { Component, useEffect, useLayoutEffect, useState } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  Platform,\n  ScrollView,\n  TouchableOpacity,\n  SafeAreaView,\n} from \"react-native\";\nimport { Avatar, Button } from \"react-native-elements\";\nimport { AntDesign, SimpleLineIcons } from \"@expo/vector-icons\";\nimport CustomListItem from \"../components/CustomListItem\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { auth, db } from \"../firebase\";\n\n// create a component\nconst HomeScreen = ({ navigation, route }) => {\n  const [chats, setChats] = useState([]);\n  console.log(\"auth:\", auth);\n\n  const signOutUser = () => {\n    auth.signOut().then(() => {\n      navigation.replace(\"Login\");\n    });\n  };\n\n  useEffect(() => {\n    const unsubscribe = db\n      .collection(\"chats\")\n      .where(\"chatUsers\", \"array-contains\", auth?.currentUser?.email)\n      .onSnapshot((snapshot) =>\n        setChats(\n          snapshot.docs.map((doc) => ({\n            id: doc.id,\n            data: doc.data(),\n          }))\n        )\n      );\n    return unsubscribe;\n  }, [route]);\n\n  console.log(\"Chats:\", chats);\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      title: \"Simple Chat\",\n      headerStyle: { backgroundColor: \"white\" },\n      headerTitleStyle: { color: \"black\" },\n      headerTintColor: \"black\",\n      headerLeft: () => (\n        <View style={styles.headerLeft}>\n          <TouchableOpacity onPress={signOutUser} activeOpacity={0.5}>\n            <Avatar\n              rounded\n              source={{\n                uri:\n                  auth?.currentUser?.photoURL ||\n                  \"https://alpha-tv.net/wp-content/uploads/2021/12/avatar.png\",\n              }}\n            ></Avatar>\n          </TouchableOpacity>\n          <Text style={{ fontSize: 10 }}>{auth?.currentUser?.displayName}</Text>\n        </View>\n      ),\n      headerRight: () => (\n        <View style={styles.headerRight}>\n          <TouchableOpacity activeOpacity={0.5}>\n            <AntDesign name=\"camerao\" size={24} color=\"black\" />\n          </TouchableOpacity>\n          <TouchableOpacity\n            onPress={() => {\n              navigation.navigate(\"AddChat\");\n            }}\n            activeOpacity={0.5}\n          >\n            <AntDesign name=\"edit\" size={24} color=\"black\" />\n          </TouchableOpacity>\n        </View>\n      ),\n    });\n  }, []);\n\n  const enterChat = (id, chatName, chatUsers) => {\n    navigation.navigate(\"Chat\", {\n      id: id,\n      chatName: chatName,\n      chatUsers: chatUsers,\n    });\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <ScrollView>\n        {chats.map(({ id, data: { chatName, chatUsers } }) => (\n          <CustomListItem\n            key={id}\n            id={id}\n            chatName={chatName}\n            chatUsers={chatUsers}\n            enterChat={enterChat}\n          />\n        ))}\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\n// define your styles\nconst styles = StyleSheet.create({\n  container: {\n    height: \"100%\",\n  },\n  headerLeft: {\n    ...Platform.select({\n      ios: {},\n      android: {},\n      default: {\n        // other platforms, web for example\n        marginLeft: 20,\n      },\n    }),\n  },\n  headerRight: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    width: 80,\n    ...Platform.select({\n      ios: {},\n      android: {},\n      default: {\n        marginRight: 20,\n      },\n    }),\n  },\n});\n\n//make this component available to the app\nexport default HomeScreen;\n","import React, { Component, useLayoutEffect, useState } from \"react\";\nimport { View, Text, StyleSheet } from \"react-native\";\nimport { Button, Icon, Input } from \"react-native-elements\";\nimport { auth, db } from \"../firebase\";\n\n// create a component\nconst AddChatScreen = ({ navigation }) => {\n  const [input, setInput] = useState(\"\");\n\n  useLayoutEffect(() => {\n    navigation.setOptions(\n      {\n        title: \"Add New Chat\",\n        headerBackTitle: \"Chats\"\n      },\n      [navigation]\n    );\n  });\n\n  const createChat = async () => {\n    await db\n      .collection(\"chats\")\n      .add({\n        chatName: input,\n        chatOwner: auth.currentUser.email,\n        chatUsers: [auth.currentUser.email]\n      })\n      .then(() => navigation.goBack())\n      .catch((error) => alert(error));\n  };\n\n  return (\n    <View style={styles.container}>\n      <View>\n        <Input\n          value={input}\n          placeholder=\"Enter New Chat Name\"\n          onChangeText={(val) => setInput(val)}\n          onSubmitEditing={createChat}\n          leftIcon={<Icon name=\"chat\" size={24} color=\"black\" />}\n        />\n        <Button onPress={createChat} title=\"Create New Chat\" disabled={!input} />\n      </View>\n    </View>\n  );\n};\n\n// define your styles\nconst styles = StyleSheet.create({\n  container: {\n    //flex: 1,\n    //justifyContent: \"center\",\n    //alignItems: \"center\",\n    backgroundColor: \"white\",\n    padding: 30,\n    height: \"100%\"\n  }\n});\n\n//make this component available to the app\nexport default AddChatScreen;\n","import React, { Component, useLayoutEffect, useState } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  ViewBase,\n  SafeAreaView,\n  KeyboardAvoidingView,\n  Platform,\n  ScrollView,\n  TextInput,\n  Keyboard,\n  TouchableWithoutFeedback,\n} from \"react-native\";\nimport { Avatar, Button } from \"react-native-elements\";\nimport { AntDesign, FontAwesome, Ionicons } from \"@expo/vector-icons\";\nimport { StatusBar } from \"expo-status-bar\";\nimport firebase from \"firebase/app\";\nimport { auth, db } from \"../firebase\";\n\n// create a component\nconst ChatScreen = ({ navigation, route }) => {\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  console.log(\"ChatScreen - route params\", route.params);\n  console.log(\"ChatScreen - navigation\", navigation);\n\n  //test\n  const goToJoinPage = () => {\n    navigation.navigate(\"JoinChat\", {\n      id: route.params.id,\n      chatName: route.params.chatName,\n      chatUsers: route.params.chatUsers,\n    });\n  };\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      title: \"\",\n      headerTitleAlign: \"left\",\n      headerBackTitleVisible: false,\n      headerTitle: () => (\n        <View style={{flex: 1, flexDirection: \"row\", alignItems: \"center\" }}>\n          <Avatar\n            rounded\n            source={{\n              uri: messages[0]?.data.photoURL || auth.currentUser.photoURL,\n            }}\n          />\n          <Text\n            style={{\n              color: \"white\",\n              marginLeft: 10,\n              fontWeight: \"700\",\n            }}\n          >\n            {route.params.chatName}\n          </Text>\n        </View>\n      ),\n\n      headerRight: () => (\n        <View style={styles.headerRight}>\n          <TouchableOpacity onPress={goToJoinPage}>\n            <FontAwesome name=\"user-plus\" size={24} color=\"white\" />\n          </TouchableOpacity>\n          <TouchableOpacity>\n            <Ionicons name=\"call\" size={24} color=\"white\" />\n          </TouchableOpacity>\n        </View>\n      ),\n    });\n  }, [navigation, messages]);\n\n  const sendMessage = () => {\n    Keyboard.dismiss();\n\n    db.collection(\"chats\").doc(route.params.id).collection(\"messages\").add({\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      message: input,\n      displayName: auth.currentUser.displayName,\n      email: auth.currentUser.email,\n      photoURL: auth.currentUser.photoURL,\n    });\n\n    setInput(\"\");\n  };\n\n  useLayoutEffect(() => {\n    const unsubscribe = db\n      .collection(\"chats\")\n      .doc(route.params.id)\n      .collection(\"messages\")\n      .orderBy(\"timestamp\", \"desc\")\n      .onSnapshot((snapshot) =>\n        setMessages(\n          snapshot.docs.map((doc) => ({\n            id: doc.id,\n            data: doc.data(),\n          }))\n        )\n      );\n    return unsubscribe;\n  }, [route]);\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <StatusBar style=\"light\" />\n      <KeyboardAvoidingView\n        behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n        style={styles.container}\n        keyboardVerticalOffset={90}\n      >\n        <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n          <>\n            <ScrollView contentContainerStyle={{ paddingTop: 15 }}>\n              {messages.map(({ id, data }) =>\n                data.email === auth.currentUser.email ? (\n                  <View key={id} style={styles.reciever}>\n                    <Avatar\n                      rounded\n                      //WEB\n                      containerStyle={{\n                        position: \"absolute\",\n                        bottom: -15,\n                        right: -5,\n                      }}\n                      //#WEB\n                      position=\"absolute\"\n                      bottom={-15}\n                      right={-5}\n                      size={30}\n                      source={\n                        data.photoURL\n                          ? { uri: data.photoURL }\n                          : require(\"../assets/avatar.png\")\n                      }\n                    />\n\n                    <Text style={styles.recieverText}>{data.message}</Text>\n                    <Text style={styles.recieverName}>\n                      {data.displayName || \"No Name\" + \" \" + data.email}\n                    </Text>\n                    <Text style={{ fontSize: 10 }}>\n                      {new Date(data.timestamp * 1000).toLocaleTimeString([], {\n                        hour: \"2-digit\",\n                        minute: \"2-digit\",\n                      })}\n                    </Text>\n                  </View>\n                ) : (\n                  <View key={id} style={styles.sender}>\n                    <Avatar\n                      rounded\n                      //WEB\n                      containerStyle={{\n                        position: \"absolute\",\n                        bottom: -15,\n                        left: -5,\n                      }}\n                      //#WEB\n                      position=\"absolute\"\n                      bottom={-15}\n                      left={-5}\n                      size={30}\n                      source={\n                        data.photoURL\n                          ? { uri: data.photoURL }\n                          : require(\"../assets/avatar.png\")\n                      }\n                    />\n                    <Text style={styles.senderText}>{data.message}</Text>\n                    <Text style={styles.senderName}>\n                      {data.displayName || \"No Name\" + \" \" + data.email}\n                    </Text>\n                  </View>\n                )\n              )}\n            </ScrollView>\n            <View style={styles.footer}>\n              <TextInput\n                value={input}\n                onChangeText={(val) => setInput(val)}\n                style={styles.textInput}\n                placeholder=\"Enter Message\"\n                onSubmitEditing={sendMessage}\n              />\n              <TouchableOpacity\n                onPress={sendMessage}\n                activeOpacity={0.5}\n                disabled={!input}\n              >\n                <Ionicons name=\"send\" size={24} color=\"#2B68E6\" />\n              </TouchableOpacity>\n            </View>\n          </>\n        </TouchableWithoutFeedback>\n      </KeyboardAvoidingView>\n    </SafeAreaView>\n  );\n};\n\n// define your styles\nconst styles = StyleSheet.create({\n  safeArea: {\n    flex: 1,\n    backgroundColor: \"white\",\n  },\n  container: {\n    flex: 1,\n  },\n  headerRight: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    width: 80,\n    marginRight: 10,\n  },\n  headerLeft: {},\n  footer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    width: \"100%\",\n    padding: 15,\n  },\n  textInput: {\n    flex: 1,\n    bottom: 0,\n    height: 40,\n    marginRight: 15,\n    borderColor: \"transparent\",\n    backgroundColor: \"#ECECEC\",\n    borderWidth: 1,\n    padding: 10,\n    color: \"grey\",\n    borderRadius: 30,\n  },\n  reciever: {\n    padding: 15,\n    backgroundColor: \"#ECECEC\",\n    alignSelf: \"flex-end\",\n    borderRadius: 20,\n    marginRight: 15,\n    marginBottom: 20,\n    maxWidth: \"80%\",\n    position: \"relative\",\n  },\n  sender: {\n    padding: 15,\n    backgroundColor: \"#2B68E6\",\n    alignSelf: \"flex-start\",\n    borderRadius: 20,\n    margin: 15,\n    maxWidth: \"80%\",\n    position: \"relative\",\n  },\n  senderName: {\n    left: 10,\n    paddingRight: 10,\n    fontSize: 10,\n    color: \"white\",\n  },\n  recieverName: {\n    right: 10,\n    paddingLeft: 10,\n    fontSize: 10,\n    color: \"black\",\n  },\n  recieverText: {\n    color: \"black\",\n    fontWeight: \"500\",\n  },\n  senderText: {\n    color: \"white\",\n    fontWeight: \"500\",\n    marginLeft: 10,\n    marginBottom: 15,\n  },\n});\n\n//make this component available to the app\nexport default ChatScreen;\n","import React, { Component, useEffect, useState } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  SafeAreaView,\n  ScrollView,\n  TouchableOpacity,\n} from \"react-native\";\nimport { Avatar, ListItem } from \"react-native-elements\";\n\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport { auth, db } from \"../firebase\";\nimport firebase from \"firebase/app\";\n\n// create a component\nconst JoinChatScreen = ({ route }) => {\n  console.log(\"JoinChatScreen route: \", route);\n\n  const [chatUsers, setChatUsers] = useState([]);\n  console.log(\"chatUsers:\", chatUsers);\n\n  useEffect(() => {\n    const unsubscribe = db\n      .collection(\"users\")\n      .where(\"userEmail\", \"!=\", auth?.currentUser?.email)\n      .onSnapshot((snapshot) =>\n        setChatUsers(\n          snapshot.docs.map((doc) => ({\n            id: doc.id,\n            data: doc.data(),\n          }))\n        )\n      );\n    return unsubscribe;\n  }, [route]);\n\n  const inviteUser = (userId, userEmail) => {\n    const inviteUrl =\n      \"https://signal-clone-71a42.web.app/join/\" +\n      route.params.id +\n      \"/\" +\n      userId;\n    console.log(\"inviteUrl:\", inviteUrl);\n\n    const addNewChatUser = db.collection(\"chats\").doc(route.params.id);\n    return addNewChatUser\n      .update({\n        chatUsers: firebase.firestore.FieldValue.arrayUnion(userEmail),\n      })\n      .then(() => {\n        console.log(\"Document successfully updated!\");\n        alert(\"User successfully invited!\");\n      })\n      .catch((error) => {\n        // The document probably doesn't exist.\n        console.error(\"Error updating document: \", error);\n      });\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <ScrollView>\n        {chatUsers\n          //.filter((user) => {return !route.params.chatUsers.includes(user.data.userEmail)}  )\n          .map((user, index) => (\n            <ListItem style={styles.listItem} key={index} bottomDivider>\n              <Avatar\n                rounded\n                source={\n                  user?.data?.userImageURL\n                    ? { uri: user?.data?.userImageURL }\n                    : require(\"../assets/avatar.png\")\n                }\n              ></Avatar>\n              <ListItem.Content>\n                <ListItem.Title style={{ fontWeight: \"800\" }}>\n                  {user.data.userName}\n                </ListItem.Title>\n                <ListItem.Subtitle numberOfLines={1} ellipsizeMode=\"tail\">\n                  {user.data.userEmail}\n                </ListItem.Subtitle>\n              </ListItem.Content>\n              {route.params.chatUsers.includes(user.data.userEmail) ? (\n                <FontAwesome\n                  name=\"users\"\n                  size={24}\n                  color=\"#2B68E6\"\n                  style={{ opacity: 0.3 }}\n                />\n              ) : (\n                <TouchableOpacity\n                  onPress={() => inviteUser(user.data.uid, user.data.userEmail)}\n                >\n                  <FontAwesome name=\"user-plus\" size={24} color=\"#2B68E6\" />\n                </TouchableOpacity>\n              )}\n            </ListItem>\n          ))}\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\n// define your styles\nconst styles = StyleSheet.create({\n  container: {\n    //flex: 1,\n    //justifyContent: \"center\",\n    //alignItems: \"center\",\n    //backgroundColor: \"#2c3e50\",\n  },\n  button: {\n    width: 40,\n    backgroundColor: \"#2C6BED\",\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 50,\n  },\n});\n\n//make this component available to the app\nexport default JoinChatScreen;\n","import React from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { StyleSheet, Text, View } from \"react-native\";\n\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport RegisterScreen from \"./screens/RegisterScreen\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport AddChatScreen from \"./screens/AddChatScreen\";\nimport ChatScreen from \"./screens/ChatScreen\";\nimport JoinChatScreen from \"./screens/JoinChatScreen\";\n\nconst Stack = createNativeStackNavigator();\n\nconst globalScreenOptions = {\n  headerStyle: { backgroundColor: \"#2C6BED\" },\n  headerTitleStyle: { color: \"#fff\" },\n  headerTintColor: \"white\",\n};\n\nconst linking = {\n  config: {\n    screens: {\n      JoinChat: \"join/:id/:chatName\",\n    },\n  },\n};\n\nexport default function App() {\n  return (\n    <NavigationContainer linking={linking} style={styles.container}>\n      <Stack.Navigator screenOptions={globalScreenOptions}>\n        <Stack.Screen name=\"Login\" component={LoginScreen} />\n        <Stack.Screen name=\"Register\" component={RegisterScreen} />\n        <Stack.Screen name=\"Home\" component={HomeScreen} />\n        <Stack.Screen name=\"AddChat\" component={AddChatScreen} />\n        <Stack.Screen name=\"Chat\" component={ChatScreen} />\n        <Stack.Screen name=\"JoinChat\" component={JoinChatScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    //flex: 1,\n    //backgroundColor: \"#ccc\",\n    //alignItems: \"center\",\n    //justifyContent: \"center\",\n  },\n});\n","module.exports = __webpack_public_path__ + \"static/media/logo.349c903c.png\";","module.exports = __webpack_public_path__ + \"static/media/avatar.74dc8f5e.png\";"],"sourceRoot":""}